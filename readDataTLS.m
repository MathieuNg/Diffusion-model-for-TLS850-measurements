function [dataR, dataG, dataB] = readDataTLS(filename)
% AIM
% Reads the text file generated by TLS software containing the reflectance
% data profiles and put them in matrices depending on the RGB channels.

% INPUT
% filename (str): indicates the path of the filename to read the data from.
% It should be a text file generated by the TLS software.

% OUTPUTS
% dataR (mat): matrix of shape (512xnumRecords) containing information of
% the RED channel.
% dataG (mat): matrix of shape (512xnumRecords) containing information of
% the GREEN channel.
% dataB (mat): matrix of shape (512xnumRecords) containing information of
% the BLUE channel.

% Copyright (C) 2023 - Mathieu Nguyen

% This program is free software: you can redistribute it and/or modify 
% it under the terms of the GNU General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 

% This program is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU General Public License for more details. 

% You should have received a copy of the GNU General Public License 
% along with this program.  If not, see <http://www.gnu.org/licenses/>.




% The data is organised as follows:
% 1st line are NaN values as it is text in original file,
% In between each set of data (512 rows), two rows of NaN values due to
% text in original file.

file_table = readtable(filename);
tableRecords = file_table.(1);
numRecords = tableRecords(end);
numChannels = file_table.(2)(end);
tableData = file_table.(3);

data = zeros(numChannels, numRecords);

for i = 1:numRecords
    cond = find(tableRecords == i);
    data(:, i) = tableData(cond);
end

% Separation of data from RGB channels
dataR = data(:, 1:3:numRecords);
dataG = data(:, 2:3:numRecords);
dataB = data(:, 3:3:numRecords);

end